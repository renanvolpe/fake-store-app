// Mocks generated by Mockito 5.4.4 from annotations
// in fake_store_joao/test/data/repositories/local/authentication_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fake_store_joao/data/http/http_connection.dart' as _i4;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:result_dart/result_dart.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<S extends Object, F extends Object> extends _i1.SmartFake
    implements _i3.Result<S, F> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClientsTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClientsTest extends _i1.Mock implements _i4.HttpClientsTest {
  MockHttpClientsTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get httpTeste => (super.noSuchMethod(
        Invocation.getter(#httpTeste),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#httpTeste),
        ),
      ) as _i2.Client);

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i5.Future<_i3.Result<dynamic, String>> httpGet({
    required String? endpoint,
    Map<String, String>? params,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpGet,
          [],
          {
            #endpoint: endpoint,
            #params: params,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i3.Result<dynamic, String>>.value(
            _FakeResult_1<Object, String>(
          this,
          Invocation.method(
            #httpGet,
            [],
            {
              #endpoint: endpoint,
              #params: params,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i3.Result<dynamic, String>>);

  @override
  _i5.Future<_i3.Result<dynamic, String>> httpPost({
    required String? endpoint,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpPost,
          [],
          {
            #endpoint: endpoint,
            #body: body,
          },
        ),
        returnValue: _i5.Future<_i3.Result<dynamic, String>>.value(
            _FakeResult_1<Object, String>(
          this,
          Invocation.method(
            #httpPost,
            [],
            {
              #endpoint: endpoint,
              #body: body,
            },
          ),
        )),
      ) as _i5.Future<_i3.Result<dynamic, String>>);

  @override
  _i5.Future<_i3.Result<dynamic, String>> httpDelete({
    required String? endpoint,
    required int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpDelete,
          [],
          {
            #endpoint: endpoint,
            #id: id,
          },
        ),
        returnValue: _i5.Future<_i3.Result<dynamic, String>>.value(
            _FakeResult_1<Object, String>(
          this,
          Invocation.method(
            #httpDelete,
            [],
            {
              #endpoint: endpoint,
              #id: id,
            },
          ),
        )),
      ) as _i5.Future<_i3.Result<dynamic, String>>);

  @override
  _i5.Future<_i3.Result<dynamic, String>> httpPatch({
    required String? endpoint,
    required Map<dynamic, dynamic>? body,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpPatch,
          [],
          {
            #endpoint: endpoint,
            #body: body,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i3.Result<dynamic, String>>.value(
            _FakeResult_1<Object, String>(
          this,
          Invocation.method(
            #httpPatch,
            [],
            {
              #endpoint: endpoint,
              #body: body,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i3.Result<dynamic, String>>);

  @override
  _i5.Future<_i3.Result<dynamic, String>> httpPut({
    required String? endpoint,
    required Map<dynamic, dynamic>? body,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpPut,
          [],
          {
            #endpoint: endpoint,
            #body: body,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i3.Result<dynamic, String>>.value(
            _FakeResult_1<Object, String>(
          this,
          Invocation.method(
            #httpPut,
            [],
            {
              #endpoint: endpoint,
              #body: body,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i3.Result<dynamic, String>>);
}
